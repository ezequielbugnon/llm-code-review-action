name: 'LLM Comparison'
description: 'Performs a comparison of LLM and publishes the result as a comment in the PR.'
inputs:
  go_version:
    description: 'Go version to use.'
    required: true
    default: '1.23'
  clientid:
    description: 'Client ID for authentication.'
    required: true
  clientsecret:
    description: 'Client Secret for authentication.'
    required: true
  github_token:
    description: 'GitHub token for authentication.'
    required: true
  repo_path:
    description: 'Path to the repository.'
    required: true
outputs:
  review_output:
    description: 'Result of code review'

runs:
  using: 'composite'
  steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        repository: ${{ inputs.repo_path }}
        path: ./analyzed-repo  

    - name: Checkout the action repository
      uses: actions/checkout@v2
      with:
        repository: ezequielbugnon/llm-code-review-action 
        path: ./llm-code-review-action

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ inputs.go_version }}

    - name: Debug repo_path
      run: |
        echo "repo_path is: ${{ inputs.repo_path }}"

    - name: Install dependencies
      run: |
        cd ./llm-code-review-action/script 
        go mod tidy
      shell: bash

    - name: Run StackSpot Analizer
      id: run_analysis
      run: |
        cd ./llm-code-review-action/script 
        export GO111MODULE=on
        review_output=$(go run main.go) # aqui yo necesito que el main.go analice esto ./analyzed-repo y no tenga conflicto con el cd de arriba
        echo "review_output<<EOF" >> $GITHUB_ENV
        echo "$review_output" >> $GITHUB_ENV
        echo "EOF" >> $GITHUB_ENV
      shell: bash
      env:
        URLCALLBACK: "https://genai-code-buddy-api.stackspot.com/v1/quick-commands/callback/"
        URLEXECUTION: "https://genai-code-buddy-api.stackspot.com/v1/quick-commands/create-execution/code-review-expert"
        URLTOKEN: "https://idm.stackspot.com/itau/oidc/oauth/token"
        CLIENTID: ${{ inputs.clientid }}
        CLIENTSECRET: ${{ inputs.clientsecret }}
        GITHUB_TOKEN: ${{ inputs.GITHUB_TOKEN }}
        REPO_PATH: ${{ inputs.repo_path }}

    - name: Post review as PR comment
      if: ${{ env.review_output != '' }} 
      uses: thollander/actions-comment-pull-request@v3
      env:
        GITHUB_TOKEN: ${{ inputs.github_token }}
        REVIEW_OUTPUT: ${{ env.review_output }}
      with:
        message: |
          Olá! :wave: Aqui está o resultado da análise: ${{ env.REVIEW_OUTPUT }}