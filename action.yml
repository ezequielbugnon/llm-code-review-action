name: 'LLM Comparison'
description: 'Performs a comparison of LLM and publishes the result as a comment in the PR.'
inputs:
  go_version:
    description: 'Go version to use.'
    required: true
    default: '1.23'
  clientid:
    description: 'Client ID for authentication.'
    required: true
  clientsecret:
    description: 'Client Secret for authentication.'
    required: true
  github_token:
    description: 'GitHub token for authentication.'
    required: true
outputs:
  review_output:
    description: 'Result of code review'

runs:
  using: 'composite'
  steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        repository: ezequielbugnon/llm-code-review-action
        path: ./llm-code-review-action
        fetch-depth: 2

    - name: Confirm branch and commits
      run: |
        echo "Current branch:"
        git branch --show-current
        echo "Latest commits:"
        git log -2 --oneline
      shell: bash

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ inputs.go_version }}

    - name: List files for debugging
      run: ls -R
      shell: bash

    - name: Install dependencies
      run: |
        cd llm-code-review-action/script
        go mod tidy
      shell: bash

    - name: Run StackSpot Analizer
      id: run_analysis
      run: |
        cd llm-code-review-action/script
        export GO111MODULE=on
        review_output=$(go run main.go)
        echo "review_output<<EOF" >> $GITHUB_ENV
        echo "$review_output" >> $GITHUB_ENV
        echo "EOF" >> $GITHUB_ENV
      shell: bash
      env:
        URLCALLBACK: "https://genai-code-buddy-api.stackspot.com/v1/quick-commands/callback/"
        URLEXECUTION: "https://genai-code-buddy-api.stackspot.com/v1/quick-commands/create-execution/code-review-expert"
        URLTOKEN: "https://idm.stackspot.com/itau/oidc/oauth/token"
        CLIENTID: ${{ inputs.clientid }}
        CLIENTSECRET: ${{ inputs.clientsecret }}
        GITHUB_TOKEN: ${{ inputs.GITHUB_TOKEN }}

    - name: Post review as PR comment
      if: ${{ env.review_output != '' }} 
      uses: thollander/actions-comment-pull-request@v3
      env:
        GITHUB_TOKEN: ${{ inputs.github_token }}
        REVIEW_OUTPUT: ${{ env.review_output }}
      with:
        message: |
          Olá! :wave: Aqui está o resultado da análise: ${{ env.REVIEW_OUTPUT }}